terraform {
  backend "s3" {
    bucket = "doordash-cluster-state"
    dynamodb_table = "doordash-cluster-state"
    key    = "resources/services/staging/_GITREPO_/service.tfstate"
    region = "us-west-2"
  }
}

module "payment-service-web" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                                 = var.namespace
  service_name                              = var.service_name
  service_app                               = "web"
  service_contact_info                      = "eng-payment@doordash.com"
  service_docker_image                      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag                  = var.image_tag
  service_image_pull_policy                 = "Always"
  service_iam_role                          = "arn:aws:iam::914801092467:role/web.payment-service"

  service_max_surge                         = "100%"
  service_max_unavailable                   = "0"
  service_replica_count                     = "2"
  service_container_port                    = "80"

  blue_green_enable                         = "true"
  blue_green_first_deployment               = var.blue_green_first_deployment
  blue_green_scale_down_delay_seconds       = 0

  service_resource_requests_memory          = "4Gi"
  service_resource_limits_memory            = "4Gi"
  service_resource_requests_cpu             = "4096m"
  service_resource_limits_cpu               = "4096m"

  service_readiness_probe_path              = "/health"
  service_readiness_probe_init_delay        = 30
  service_readiness_probe_period            = 5
  service_readiness_probe_failure_threshold = 3

  runtime_enable                            = "true"

  net_service_enable                        = "true"
  net_service_port                          = "80"
  net_service_type                          = "ClusterIP"

  service_environments_variables = <<EOF
    ENVIRONMENT=staging
   EOF
}

module "payment-service-webhook" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                                 = var.namespace
  service_name                              = var.service_name
  service_app                               = "webhook"
  service_contact_info                      = "eng-payment@doordash.com"
  service_docker_image                      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag                  = var.image_tag
  service_image_pull_policy                 = "Always"
  service_iam_role                          = "arn:aws:iam::914801092467:role/web.payment-service"

  service_max_surge                         = "100%"
  service_max_unavailable                   = "0"
  service_replica_count                     = "2"
  service_container_port                    = "80"

  blue_green_enable                         = "true"
  blue_green_first_deployment               = var.blue_green_first_deployment
  blue_green_scale_down_delay_seconds       = 0

  service_resource_requests_memory          = "4Gi"
  service_resource_limits_memory            = "4Gi"
  service_resource_requests_cpu             = "4096m"
  service_resource_limits_cpu               = "4096m"

  service_readiness_probe_path              = "/health"
  service_readiness_probe_init_delay        = 30
  service_readiness_probe_period            = 5
  service_readiness_probe_failure_threshold = 3

  runtime_enable                            = "true"

  net_service_enable                        = "true"
  net_service_port                          = "80"
  net_service_type                          = "ClusterIP"

  service_environments_variables = <<EOF
    ENVIRONMENT=staging
   EOF
}

module "payment-service-cron" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                                 = var.namespace
  service_name                              = var.service_name
  service_app                               = "cron"
  service_contact_info                      = "eng-payment@doordash.com"
  service_docker_image                      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag                  = var.image_tag
  service_image_pull_policy                 = "Always"
  service_cmd                               = "python"
  service_cmd_args                          = "app/payin_cron.py"

  service_iam_role                          = "arn:aws:iam::914801092467:role/cron.payment-service"

  service_max_surge                         = "100%"
  service_max_unavailable                   = "0"
  service_replica_count                     = "1"
  service_container_port                    = "80"

  service_liveness_probe_init_delay         = "20"
  service_liveness_probe_period             = "10"
  service_liveness_probe_failure_threshold  = "3"
  service_liveness_probe_path               = "/"

  service_resource_requests_memory          = "4Gi"
  service_resource_limits_memory            = "4Gi"
  service_resource_requests_cpu             = "2048m"
  service_resource_limits_cpu               = "2048m"

  runtime_enable                            = "true"

  net_service_enable                        = "true"
  net_service_port                          = "80"
  net_service_type                          = "ClusterIP"

  service_environments_variables = <<EOF
    ENVIRONMENT=staging
   EOF
}

module "payment-service-payout-cron" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                                 = var.namespace
  service_name                              = var.service_name
  service_app                               = "payout-cron"
  service_contact_info                      = "eng-payment@doordash.com"
  service_docker_image                      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag                  = var.image_tag
  service_image_pull_policy                 = "Always"
  service_cmd                               = "python"
  service_cmd_args                          = "app/payout_cron.py"

  service_iam_role                          = "arn:aws:iam::914801092467:role/cron.payment-service"

  service_max_surge                         = "100%"
  service_max_unavailable                   = "0"
  service_replica_count                     = "1"
  service_container_port                    = "80"

  service_liveness_probe_init_delay         = "20"
  service_liveness_probe_period             = "10"
  service_liveness_probe_failure_threshold  = "3"
  service_liveness_probe_path               = "/"

  service_resource_requests_memory          = "4Gi"
  service_resource_limits_memory            = "4Gi"
  service_resource_requests_cpu             = "1024m"
  service_resource_limits_cpu               = "1024m"

  runtime_enable                            = "true"

  net_service_enable                        = "true"
  net_service_port                          = "80"
  net_service_type                          = "ClusterIP"

  service_environments_variables = <<EOF
    ENVIRONMENT=staging
   EOF
}

module "payment-service-delete-payer-cron" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                                 = var.namespace
  service_name                              = var.service_name
  service_app                               = "delete-payer-cron"
  service_contact_info                      = "eng-payment@doordash.com"
  service_docker_image                      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag                  = var.image_tag
  service_image_pull_policy                 = "Always"
  service_cmd                               = "python"
  service_cmd_args                          = "app/delete_payer_cron.py"

  service_iam_role                          = "arn:aws:iam::914801092467:role/cron.payment-service"

  service_max_surge                         = "100%"
  service_max_unavailable                   = "0"
  service_replica_count                     = "1"
  service_container_port                    = "80"

  service_liveness_probe_init_delay         = "20"
  service_liveness_probe_period             = "10"
  service_liveness_probe_failure_threshold  = "3"
  service_liveness_probe_path               = "/"

  service_resource_requests_memory          = "4Gi"
  service_resource_limits_memory            = "4Gi"
  service_resource_requests_cpu             = "2048m"
  service_resource_limits_cpu               = "2048m"

  runtime_enable                            = "true"

  net_service_enable                        = "true"
  net_service_port                          = "80"
  net_service_type                          = "ClusterIP"

  service_environments_variables = <<EOF
    ENVIRONMENT=staging
   EOF
}

module "payment-service-admin" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                                 = var.namespace
  service_name                              = var.service_name
  service_app                               = "admin"
  service_contact_info                      = "eng-payment@doordash.com"
  service_docker_image                      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag                  = var.image_tag
  service_image_pull_policy                 = "Always"
  service_iam_role                          = "arn:aws:iam::914801092467:role/web.payment-service"
  service_cmd                               = "tail"
  service_cmd_args                          = "-f, /dev/null"

  service_max_surge                         = "100%"
  service_max_unavailable                   = "0"
  service_replica_count                     = "1"
  service_container_port                    = "80"

  service_resource_requests_memory          = "1Gi"
  service_resource_limits_memory            = "1Gi"
  service_resource_requests_cpu             = "1024m"
  service_resource_limits_cpu               = "1024m"

  runtime_enable                            = "true"

  net_service_enable                        = "true"
  net_service_port                          = "80"
  net_service_type                          = "ClusterIP"

  service_environments_variables = <<EOF
    ENVIRONMENT=staging
   EOF
}

module "payment-service-payment-payout-worker" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                                 = var.namespace
  service_name                              = var.service_name
  service_app                               = "payment-payout-worker"
  service_contact_info                      = "eng-payment@doordash.com"
  service_docker_image                      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag                  = var.image_tag
  service_image_pull_policy                 = "Always"
  service_iam_role                          = "arn:aws:iam::914801092467:role/web.payment-service"
  service_cmd                               = "python"
  service_cmd_args                          = "-m, app.worker, --topic_name, payment_payout, --processor, app.payout.tasks, --num_consumers, '1'"

  service_max_surge                         = "100%"
  service_max_unavailable                   = "0"
  service_replica_count                     = "1"
  service_container_port                    = "80"

  service_liveness_probe_init_delay         = "20"
  service_liveness_probe_period             = "10"
  service_liveness_probe_failure_threshold  = "3"
  service_liveness_probe_path               = "/"

  service_resource_requests_memory          = "1Gi"
  service_resource_limits_memory            = "1Gi"
  service_resource_requests_cpu             = "1024m"
  service_resource_limits_cpu               = "1024m"

  runtime_enable                            = "true"

  net_service_enable                        = "true"
  net_service_port                          = "80"
  net_service_type                          = "ClusterIP"

  service_environments_variables = <<EOF
    ENVIRONMENT=staging
   EOF
}

module "payment-service-payment-stripe-worker" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                                 = var.namespace
  service_name                              = var.service_name
  service_app                               = "payment-stripe-worker"
  service_contact_info                      = "eng-payment@doordash.com"
  service_docker_image                      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag                  = var.image_tag
  service_image_pull_policy                 = "Always"
  service_iam_role                          = "arn:aws:iam::914801092467:role/web.payment-service"
  service_cmd                               = "python"
  service_cmd_args                          = "-m, app.worker, --topic_name, payment_stripe, --processor, app.payout.tasks, --num_consumers, '1'"

  service_max_surge                         = "100%"
  service_max_unavailable                   = "0"
  service_replica_count                     = "1"
  service_container_port                    = "80"

  service_liveness_probe_init_delay         = "20"
  service_liveness_probe_period             = "10"
  service_liveness_probe_failure_threshold  = "3"
  service_liveness_probe_path               = "/"

  service_resource_requests_memory          = "1Gi"
  service_resource_limits_memory            = "1Gi"
  service_resource_requests_cpu             = "1024m"
  service_resource_limits_cpu               = "1024m"

  runtime_enable                            = "true"

  net_service_enable                        = "true"
  net_service_port                          = "80"
  net_service_type                          = "ClusterIP"

  service_environments_variables = <<EOF
    ENVIRONMENT=staging
   EOF
}

module "payment-service-delete-payer-worker" {
  source = "git::ssh://git@github.com/doordash/terraform-kubernetes-microservice.git?ref=master"

  namespace                                 = var.namespace
  service_name                              = var.service_name
  service_app                               = "delete-payer-worker"
  service_contact_info                      = "eng-payment@doordash.com"
  service_docker_image                      = "611706558220.dkr.ecr.us-west-2.amazonaws.com/${var.service_name}"
  service_docker_image_tag                  = var.image_tag
  service_image_pull_policy                 = "Always"
  service_iam_role                          = "arn:aws:iam::914801092467:role/web.payment-service"
  service_cmd                               = "python"
  service_cmd_args                          = "-m, app.worker, --topic_name, consumer_payments_forget, --processor, app.payin.kafka.delete_payer_message_processor, --num_consumers, '1'"

  service_max_surge                         = "100%"
  service_max_unavailable                   = "0"
  service_replica_count                     = "1"
  service_container_port                    = "80"

  service_liveness_probe_init_delay         = "20"
  service_liveness_probe_period             = "10"
  service_liveness_probe_failure_threshold  = "3"
  service_liveness_probe_path               = "/"

  service_resource_requests_memory          = "1Gi"
  service_resource_limits_memory            = "1Gi"
  service_resource_requests_cpu             = "1024m"
  service_resource_limits_cpu               = "1024m"

  runtime_enable                            = "true"

  net_service_enable                        = "true"
  net_service_port                          = "80"
  net_service_type                          = "ClusterIP"

  service_environments_variables = <<EOF
    ENVIRONMENT=staging
   EOF
}
